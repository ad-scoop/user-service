#!/usr/bin/env bash

##############################################################################
##
##  user-service start up script for UN*X
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
cd "`dirname \"$PRG\"`/.." >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

APP_NAME="user-service"
APP_BASE_NAME=`basename "$0"`

# Add default JVM options here. You can also use JAVA_OPTS and USER_SERVICE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn ( ) {
    echo "$*"
}

die ( ) {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;;
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  NONSTOP* )
    nonstop=true
    ;;
esac

CLASSPATH=$APP_HOME/app:$APP_HOME/lib/user-service-1.0-SNAPSHOT.jar:$APP_HOME/lib/ratpack-core-1.4.3.jar:$APP_HOME/lib/ratpack-guice-1.4.3.jar:$APP_HOME/lib/ratpack-rx-1.4.3.jar:$APP_HOME/lib/neo4j-ogm-bolt-driver-2.0.4.jar:$APP_HOME/lib/neo4j-ogm-core-2.0.4.jar:$APP_HOME/lib/adbanner-entites-1.0-SNAPSHOT.jar:$APP_HOME/lib/service-common-1.0-SNAPSHOT.jar:$APP_HOME/lib/authorazation-service-1.0-SNAPSHOT.jar:$APP_HOME/lib/sundial-2.0.1.jar:$APP_HOME/lib/commons-validator-1.5.1.jar:$APP_HOME/lib/netty-codec-http-4.1.5.Final.jar:$APP_HOME/lib/netty-handler-4.1.5.Final.jar:$APP_HOME/lib/netty-transport-native-epoll-4.1.5.Final-linux-x86_64.jar:$APP_HOME/lib/guava-19.0.jar:$APP_HOME/lib/slf4j-api-1.7.21.jar:$APP_HOME/lib/reactive-streams-1.0.0.jar:$APP_HOME/lib/caffeine-2.3.1.jar:$APP_HOME/lib/javassist-3.19.0-GA.jar:$APP_HOME/lib/jackson-databind-2.7.5.jar:$APP_HOME/lib/jackson-dataformat-yaml-2.7.5.jar:$APP_HOME/lib/jackson-datatype-guava-2.7.5.jar:$APP_HOME/lib/snakeyaml-1.15.jar:$APP_HOME/lib/jackson-datatype-jdk8-2.7.5.jar:$APP_HOME/lib/jackson-datatype-jsr310-2.7.5.jar:$APP_HOME/lib/guice-4.1.0.jar:$APP_HOME/lib/guice-multibindings-4.1.0.jar:$APP_HOME/lib/rxjava-1.1.2.jar:$APP_HOME/lib/rxjava-reactive-streams-1.0.1.jar:$APP_HOME/lib/neo4j-ogm-api-2.0.4.jar:$APP_HOME/lib/neo4j-2.3.6.jar:$APP_HOME/lib/neo4j-java-driver-1.0.1.jar:$APP_HOME/lib/commons-io-2.4.jar:$APP_HOME/lib/neo4j-ogm-compiler-2.0.4.jar:$APP_HOME/lib/commons-lang3-3.4.jar:$APP_HOME/lib/commons-collections4-4.1.jar:$APP_HOME/lib/log4j-slf4j-impl-2.0.2.jar:$APP_HOME/lib/log4j-api-2.0.2.jar:$APP_HOME/lib/log4j-core-2.0.2.jar:$APP_HOME/lib/commons-beanutils-1.9.2.jar:$APP_HOME/lib/commons-digester-1.8.1.jar:$APP_HOME/lib/commons-logging-1.2.jar:$APP_HOME/lib/commons-collections-3.2.2.jar:$APP_HOME/lib/netty-codec-4.1.5.Final.jar:$APP_HOME/lib/netty-buffer-4.1.5.Final.jar:$APP_HOME/lib/netty-transport-4.1.5.Final.jar:$APP_HOME/lib/netty-common-4.1.5.Final.jar:$APP_HOME/lib/jackson-annotations-2.7.0.jar:$APP_HOME/lib/jackson-core-2.7.5.jar:$APP_HOME/lib/commons-codec-1.10.jar:$APP_HOME/lib/neo4j-kernel-2.3.6.jar:$APP_HOME/lib/neo4j-lucene-index-2.3.6.jar:$APP_HOME/lib/neo4j-graph-algo-2.3.6.jar:$APP_HOME/lib/neo4j-udc-2.3.6.jar:$APP_HOME/lib/neo4j-graph-matching-2.3.6.jar:$APP_HOME/lib/neo4j-cypher-2.3.6.jar:$APP_HOME/lib/neo4j-jmx-2.3.6.jar:$APP_HOME/lib/neo4j-consistency-check-2.3.6.jar:$APP_HOME/lib/netty-resolver-4.1.5.Final.jar:$APP_HOME/lib/neo4j-primitive-collections-2.3.6.jar:$APP_HOME/lib/neo4j-io-2.3.6.jar:$APP_HOME/lib/neo4j-csv-2.3.6.jar:$APP_HOME/lib/neo4j-logging-2.3.6.jar:$APP_HOME/lib/lucene-core-3.6.2.jar:$APP_HOME/lib/scala-library-2.11.7.jar:$APP_HOME/lib/scala-reflect-2.11.7.jar:$APP_HOME/lib/scala-parser-combinators_2.11-1.0.4.jar:$APP_HOME/lib/neo4j-codegen-2.3.6.jar:$APP_HOME/lib/neo4j-cypher-compiler-1.9_2.11-2.0.5.jar:$APP_HOME/lib/neo4j-cypher-compiler-2.2_2.11-2.2.10.jar:$APP_HOME/lib/neo4j-cypher-compiler-2.3-2.3.6.jar:$APP_HOME/lib/parboiled-scala_2.11-1.1.7.jar:$APP_HOME/lib/opencsv-2.3.jar:$APP_HOME/lib/concurrentlinkedhashmap-lru-1.4.2.jar:$APP_HOME/lib/neo4j-consistency-check-legacy-2.3.6.jar:$APP_HOME/lib/neo4j-unsafe-2.3.6.jar:$APP_HOME/lib/neo4j-function-2.3.6.jar:$APP_HOME/lib/asm-5.0.2.jar:$APP_HOME/lib/neo4j-cypher-frontend-2.3-2.3.6.jar:$APP_HOME/lib/parboiled-core-1.1.7.jar:$APP_HOME/lib/javax.inject-1.jar:$APP_HOME/lib/aopalliance-1.0.jar:$APP_HOME/lib/gson-2.8.0.jar
cd "$APP_HOME/app"

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
    MAX_FD_LIMIT=`ulimit -H -n`
    if [ $? -eq 0 ] ; then
        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
            MAX_FD="$MAX_FD_LIMIT"
        fi
        ulimit -n $MAX_FD
        if [ $? -ne 0 ] ; then
            warn "Could not set maximum file descriptor limit: $MAX_FD"
        fi
    else
        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
    fi
fi

# For Darwin, add options to specify how the application appears in the dock
if $darwin; then
    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
fi

# For Cygwin, switch paths to Windows format before running java
if $cygwin ; then
    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
    CLASSPATH=$APP_HOME/app:`cygpath --path --mixed "$CLASSPATH"`
cd "$APP_HOME/app"
    JAVACMD=`cygpath --unix "$JAVACMD"`

    # We build the pattern for arguments to be converted via cygpath
    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
    SEP=""
    for dir in $ROOTDIRSRAW ; do
        ROOTDIRS="$ROOTDIRS$SEP$dir"
        SEP="|"
    done
    OURCYGPATTERN="(^($ROOTDIRS))"
    # Add a user-defined pattern to the cygpath arguments
    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
    fi
    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    i=0
    for arg in "$@" ; do
        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option

        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
        else
            eval `echo args$i`="\"$arg\""
        fi
        i=$((i+1))
    done
    case $i in
        (0) set -- ;;
        (1) set -- "$args0" ;;
        (2) set -- "$args0" "$args1" ;;
        (3) set -- "$args0" "$args1" "$args2" ;;
        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
    esac
fi

# Split up the JVM_OPTS And USER_SERVICE_OPTS values into an array, following the shell quoting and substitution rules
function splitJvmOpts() {
    JVM_OPTS=("$@")
}
eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $USER_SERVICE_OPTS


# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
if [[ "$(uname)" == "Darwin" ]] && [[ "$HOME" == "$PWD" ]]; then
  cd "$(dirname "$0")"
fi

exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" StartUserService "$@"
